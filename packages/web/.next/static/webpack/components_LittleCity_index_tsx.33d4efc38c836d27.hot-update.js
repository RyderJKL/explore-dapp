"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("components_LittleCity_index_tsx",{

/***/ "./components/LittleCity/index.tsx":
/*!*****************************************!*\
  !*** ./components/LittleCity/index.tsx ***!
  \*****************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"LittleCity\": function() { return /* binding */ LittleCity; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"../../node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"../../node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _index_module_css__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./index.module.css */ \"./components/LittleCity/index.module.css\");\n/* harmony import */ var _index_module_css__WEBPACK_IMPORTED_MODULE_17___default = /*#__PURE__*/__webpack_require__.n(_index_module_css__WEBPACK_IMPORTED_MODULE_17__);\n/* harmony import */ var geometry_extrude__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! geometry-extrude */ \"../../node_modules/geometry-extrude/src/main.js\");\n/* harmony import */ var claygl__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! claygl */ \"../../node_modules/claygl/src/claygl.js\");\n/* harmony import */ var pbf__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! pbf */ \"../../node_modules/pbf/index.js\");\n/* harmony import */ var pbf__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(pbf__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var claygl_advanced_renderer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! claygl-advanced-renderer */ \"../../node_modules/claygl-advanced-renderer/index.js\");\n/* harmony import */ var dat_gui__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! dat.gui */ \"../../node_modules/dat.gui/build/dat.gui.module.js\");\n/* harmony import */ var lru_cache__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! lru-cache */ \"../../node_modules/lru-cache/index.js\");\n/* harmony import */ var lru_cache__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(lru_cache__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var jszip__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! jszip */ \"../../node_modules/jszip/dist/jszip.min.js\");\n/* harmony import */ var jszip__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(jszip__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var _lib_toOBJ__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./lib/toOBJ */ \"./components/LittleCity/lib/toOBJ.js\");\n/* harmony import */ var _lib_tessellate__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./lib/tessellate */ \"./components/LittleCity/lib/tessellate.js\");\n/* harmony import */ var _lib_distortion__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./lib/distortion */ \"./components/LittleCity/lib/distortion.js\");\n/* harmony import */ var quickhull3d__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! quickhull3d */ \"../../node_modules/quickhull3d/dist/index.js\");\n/* harmony import */ var quickhull3d__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(quickhull3d__WEBPACK_IMPORTED_MODULE_11__);\n/* harmony import */ var polybooljs__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! polybooljs */ \"../../node_modules/polybooljs/index.js\");\n/* harmony import */ var polybooljs__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(polybooljs__WEBPACK_IMPORTED_MODULE_12__);\n/* harmony import */ var _lib_vec2__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./lib/vec2 */ \"./components/LittleCity/lib/vec2.js\");\n/* harmony import */ var maptalks__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! maptalks */ \"../../node_modules/maptalks/dist/maptalks.es-bundler.js\");\n/* harmony import */ var maptalks_dist_maptalks_css__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! maptalks/dist/maptalks.css */ \"../../node_modules/maptalks/dist/maptalks.css\");\n/* harmony import */ var maptalks_dist_maptalks_css__WEBPACK_IMPORTED_MODULE_15___default = /*#__PURE__*/__webpack_require__.n(maptalks_dist_maptalks_css__WEBPACK_IMPORTED_MODULE_15__);\nvar _this = undefined;\n\n\n\n\n\n\n// // for ClayAdvancedRenderer\n\n\n\n\n\n\n\n\n// // for PolyBool\n\n// // for vec2\n\n// // for maptalks\n\n\nvar _s = $RefreshSig$();\nvar VectorTile = (__webpack_require__(/*! @mapbox/vector-tile */ \"../../node_modules/@mapbox/vector-tile/index.js\").VectorTile);\nvar mvtCache = new (lru_cache__WEBPACK_IMPORTED_MODULE_6___default())({\n    max: 50\n});\n// 华尔街\nvar DEFAULT_LNG = -73.985079;\nvar DEFAULT_LAT = 40.747221;\n// 自由女神\n// const DEFAULT_LNG = -74.04447357976859;\n// const DEFAULT_LAT = 40.689277852470184;\n// // 中国尊\n// const DEFAULT_LNG = 116.46368504248937\n// const DEFAULT_LAT = 39.912743558838564\nvar DEFAULT_CONFIG = {\n    radius: 60,\n    curveness: 1,\n    showEarth: true,\n    earthDepth: 4,\n    earthColor: \"#c2ebb6\",\n    showBuildings: true,\n    buildingsColor: \"#fab8b8\",\n    showRoads: true,\n    roadsColor: \"#828282\",\n    showWater: true,\n    waterColor: \"#80a9d7\",\n    showCloud: true,\n    cloudColor: \"#fff\",\n    rotateSpeed: 0,\n    sky: true\n};\nvar searchStr = location.search.slice(1);\nvar searchItems = searchStr.split(\"&\");\nvar urlOpts = {};\nsearchItems.forEach(function(item) {\n    var arr = item.split(\"=\");\n    var key = arr[0];\n    var val = arr[1] || true;\n    urlOpts[key] = val;\n});\nurlOpts.lng = urlOpts.lng || DEFAULT_LNG;\nurlOpts.lat = urlOpts.lat || DEFAULT_LAT;\nfunction makeUrl() {\n    var diffConfig = {};\n    for(var key in config){\n        if (config[key] !== DEFAULT_CONFIG[key]) {\n            diffConfig[key] = config[key];\n        }\n    }\n    urlOpts.config = encodeURIComponent(JSON.stringify(diffConfig));\n    var urlItems = [];\n    for(var key1 in urlOpts){\n        urlItems.push(key1 + \"=\" + urlOpts[key1]);\n    }\n    return \"./?\" + urlItems.join(\"&\");\n}\nvar IS_TILE_STYLE = urlOpts.style === \"tile\";\nvar TILE_SIZE = 256;\nvar config = Object.assign({}, DEFAULT_CONFIG);\ntry {\n    Object.assign(config, JSON.parse(decodeURIComponent(urlOpts.config || \"{}\")));\n} catch (e) {}\nvar mvtUrlTpl = \"https://tile.nextzen.org/tilezen/vector/v1/\".concat(TILE_SIZE, \"/all/{z}/{x}/{y}.mvt?api_key=EWFsMD1DSEysLDWd2hj2cw\");\nvar map = null;\nvar mainLayer = null;\nvar initMap = function() {\n    if (mainLayer) return;\n    mainLayer = new maptalks__WEBPACK_IMPORTED_MODULE_14__.TileLayer(\"base\", {\n        tileSize: [\n            TILE_SIZE,\n            TILE_SIZE\n        ],\n        // urlTemplate: \"https://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}.png\",\n        urlTemplate: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n        subdomains: [\n            \"a\",\n            \"b\",\n            \"c\"\n        ]\n    });\n    map = new maptalks__WEBPACK_IMPORTED_MODULE_14__.Map(\"map-main\", {\n        center: [\n            urlOpts.lng,\n            urlOpts.lat\n        ],\n        zoom: 16,\n        baseLayer: mainLayer\n    });\n    map.setMinZoom(16);\n    map.setMaxZoom(16);\n};\nvar faces = [\n    \"pz\",\n    \"px\",\n    \"nz\",\n    \"py\",\n    \"nx\",\n    \"ny\"\n];\nvar vectorElements = [\n    {\n        type: \"buildings\",\n        geometryType: \"polygon\",\n        depth: function(feature) {\n            return (feature.properties.height || 30) / 10 + 1;\n        }\n    },\n    {\n        type: \"roads\",\n        geometryType: \"polyline\",\n        depth: 1.2\n    },\n    {\n        type: \"water\",\n        geometryType: \"polygon\",\n        depth: 1\n    }, \n];\nfunction iterateFeatureCoordinates(feature, cb) {\n    var geometry = feature.geometry;\n    if (geometry.type === \"MultiPolygon\") {\n        for(var i = 0; i < geometry.coordinates.length; i++){\n            for(var k = 0; k < geometry.coordinates[i].length; k++){\n                geometry.coordinates[i][k] = cb(geometry.coordinates[i][k]);\n            }\n        }\n    } else if (geometry.type === \"MultiLineString\" || geometry.type === \"Polygon\") {\n        for(var i1 = 0; i1 < geometry.coordinates.length; i1++){\n            geometry.coordinates[i1] = cb(geometry.coordinates[i1]);\n        }\n    } else if (geometry.type === \"LineString\") {\n        geometry.coordinates = cb(geometry.coordinates);\n    }\n}\nfunction subdivideLongEdges(features, maxDist) {\n    var addPoints = function addPoints(points) {\n        var newPoints = [];\n        for(var i = 0; i < points.length - 1; i++){\n            _lib_vec2__WEBPACK_IMPORTED_MODULE_13__[\"default\"].sub(v, points[i + 1], points[i]);\n            var dist = _lib_vec2__WEBPACK_IMPORTED_MODULE_13__[\"default\"].len(v);\n            _lib_vec2__WEBPACK_IMPORTED_MODULE_13__[\"default\"].scale(v, v, 1 / dist);\n            newPoints.push(points[i]);\n            for(var d = maxDist; d < dist; d += maxDist){\n                newPoints.push(_lib_vec2__WEBPACK_IMPORTED_MODULE_13__[\"default\"].scaleAndAdd([], points[i], v, d));\n            }\n        }\n        newPoints.push(points[points.length - 1]);\n        return newPoints;\n    };\n    var v = [];\n    features.forEach(function(feature) {\n        iterateFeatureCoordinates(feature, addPoints);\n    });\n}\nfunction scaleFeature(feature, offset, scale) {\n    var scalePoints = function scalePoints(pts) {\n        for(var i = 0; i < pts.length; i++){\n            pts[i][0] = (pts[i][0] + offset[0]) * scale[0];\n            pts[i][1] = (pts[i][1] + offset[1]) * scale[1];\n        }\n        return pts;\n    };\n    iterateFeatureCoordinates(feature, scalePoints);\n}\nfunction unionComplexPolygons(features) {\n    var mergedCoordinates = [];\n    features.forEach(function(feature) {\n        var geometry = feature.geometry;\n        if (geometry.type === \"Polygon\") {\n            mergedCoordinates.push(feature.geometry.coordinates);\n        } else if (geometry.type === \"MultiPolygon\") {\n            for(var i = 0; i < feature.geometry.coordinates.length; i++){\n                mergedCoordinates.push(feature.geometry.coordinates[i]);\n            }\n        }\n    });\n    var poly = PolyBool.polygonFromGeoJSON({\n        type: \"MultiPolygon\",\n        coordinates: mergedCoordinates\n    });\n    return {\n        type: \"Feature\",\n        properties: {},\n        geometry: PolyBool.polygonToGeoJSON(poly)\n    };\n}\nfunction cullBuildingPolygns(features) {\n    var earthCoords = [\n        getRectCoords(earthRect)\n    ];\n    features.forEach(function(feature) {\n        if (feature.geometry && (feature.geometry.type === \"Polygon\" || feature.geometry.type === \"MultiPolygon\")) {\n            var poly = PolyBool.polygonFromGeoJSON(feature.geometry);\n            var intersectedPoly = PolyBool.intersect({\n                regions: earthCoords,\n                inverse: false\n            }, poly);\n            feature.geometry = PolyBool.polygonToGeoJSON(intersectedPoly);\n            if (!feature.geometry.coordinates.length) {\n                feature.geometry = null;\n            }\n        }\n    });\n}\nfunction unionRect(out, a, b) {\n    var x = Math.min(a.x, b.x);\n    var y = Math.min(a.y, b.y);\n    out.x = x;\n    out.y = y;\n    out.width = Math.max(a.width + a.x, b.width + b.x) - x;\n    out.height = Math.max(a.height + a.y, b.height + b.y) - y;\n}\n// const width = 55;\nvar width = 100;\n// const height = 58.5;\nvar height = 100;\nvar earthRect = {\n    x: -width / 2,\n    y: -height / 2,\n    width: width,\n    height: height\n};\nfunction getRectCoords(rect) {\n    return [\n        [\n            rect.x,\n            rect.y\n        ],\n        [\n            rect.x + rect.width,\n            rect.y\n        ],\n        [\n            rect.x + rect.width,\n            rect.y + rect.height\n        ],\n        [\n            rect.x,\n            rect.y + rect.height\n        ],\n        [\n            rect.x,\n            rect.y\n        ], \n    ];\n}\nvar configApp = function(app1) {\n    var updateAll = function updateAll() {\n        if (!IS_TILE_STYLE) {\n            app1.methods.updateEarthSphere();\n        }\n        app1.methods.updateElements();\n    };\n    var updateUrlState = function updateUrlState() {\n        history.pushState(\"\", \"\", makeUrl());\n    };\n    if (app1) return;\n    var timeout;\n    map.on(\"moveend\", function() {\n        clearTimeout(timeout);\n        timeout = setTimeout(function() {\n            app1.methods.updateElements();\n            updateUrlState();\n        }, 500);\n    });\n    map.on(\"moving\", function() {\n        var center = map.getCenter();\n        urlOpts.lng = document.querySelector(\"#lng\").value = center.x;\n        urlOpts.lat = document.querySelector(\"#lat\").value = center.y;\n    });\n    map.on(\"zoomend\", function() {\n        clearTimeout(timeout);\n        timeout = setTimeout(function() {\n            app1.methods.updateElements();\n        }, 500);\n    });\n    Array.prototype.forEach.call(document.querySelectorAll(\"#style-list li\"), function(li) {\n        li.addEventListener(\"click\", function() {\n            urlOpts.style = li.className;\n            window.location = makeUrl();\n        });\n    });\n    document.querySelector(\"#locate\").addEventListener(\"click\", function() {\n        urlOpts.lng = +document.querySelector(\"#lng\").value;\n        urlOpts.lat = +document.querySelector(\"#lat\").value;\n        map.setCenter({\n            x: urlOpts.lng,\n            y: urlOpts.lat\n        });\n        app1.methods.updateElements();\n        updateUrlState();\n    });\n    document.querySelector(\"#reset\").addEventListener(\"click\", function() {\n        urlOpts.lng = document.querySelector(\"#lng\").value = DEFAULT_LNG;\n        urlOpts.lat = document.querySelector(\"#lat\").value = DEFAULT_LAT;\n        map.setCenter({\n            x: urlOpts.lng,\n            y: urlOpts.lat\n        });\n        app1.methods.updateElements();\n        updateUrlState();\n    });\n    var ui = new dat_gui__WEBPACK_IMPORTED_MODULE_5__.GUI();\n    ui.add(actions, \"reset\");\n    if (!IS_TILE_STYLE) {\n        ui.add(config, \"radius\", 30, 100).step(1).onChange(updateAll).onFinishChange(updateUrlState);\n    }\n    ui.add(config, \"rotateSpeed\", -2, 2).step(0.01).onChange(app1.methods.updateAutoRotate).onFinishChange(updateUrlState);\n    ui.add(config, \"sky\").onChange(app1.methods.updateSky).onFinishChange(updateUrlState);\n    var earthFolder = ui.addFolder(\"Earth\");\n    earthFolder.add(config, \"showEarth\").onChange(app1.methods.updateVisibility).onFinishChange(updateUrlState);\n    if (IS_TILE_STYLE) {\n        earthFolder.add(config, \"earthDepth\", 1, 50).onChange(app1.methods.updateEarthGround).onFinishChange(updateUrlState);\n    }\n    earthFolder.addColor(config, \"earthColor\").onChange(app1.methods.updateColor).onFinishChange(updateUrlState);\n    var buildingsFolder = ui.addFolder(\"Buildings\");\n    buildingsFolder.add(config, \"showBuildings\").onChange(app1.methods.updateVisibility).onFinishChange(updateUrlState);\n    buildingsFolder.addColor(config, \"buildingsColor\").onChange(app1.methods.updateColor).onFinishChange(updateUrlState);\n    var roadsFolder = ui.addFolder(\"Roads\");\n    roadsFolder.add(config, \"showRoads\").onChange(app1.methods.updateVisibility).onFinishChange(updateUrlState);\n    roadsFolder.addColor(config, \"roadsColor\").onChange(app1.methods.updateColor).onFinishChange(updateUrlState);\n    var waterFolder = ui.addFolder(\"Water\");\n    waterFolder.add(config, \"showWater\").onChange(app1.methods.updateVisibility).onFinishChange(updateUrlState);\n    waterFolder.addColor(config, \"waterColor\").onChange(app1.methods.updateColor).onFinishChange(updateUrlState);\n    var cloudFolder = ui.addFolder(\"Cloud\");\n    cloudFolder.add(config, \"showCloud\").onChange(app1.methods.updateVisibility).onFinishChange(updateUrlState);\n    cloudFolder.addColor(config, \"cloudColor\").onChange(app1.methods.updateColor).onFinishChange(updateUrlState);\n    cloudFolder.add(actions, \"randomCloud\");\n    ui.add(actions, \"downloadOBJ\");\n};\nvar app = null;\nvar initClay = function(containerDom) {\n    if (!containerDom) return;\n    if (app) return;\n    app = claygl__WEBPACK_IMPORTED_MODULE_16__.application.create(containerDom, {\n        autoRender: false,\n        devicePixelRatio: 1,\n        init: function init(app2) {\n            var _this1 = this;\n            this._advRenderer = new claygl_advanced_renderer__WEBPACK_IMPORTED_MODULE_4__[\"default\"](app2.renderer, app2.scene, app2.timeline, {\n                shadow: true,\n                temporalSuperSampling: {\n                    enable: true,\n                    dynamic: false\n                },\n                postEffect: {\n                    enable: true,\n                    bloom: {\n                        enable: false\n                    },\n                    screenSpaceAmbientOcclusion: {\n                        enable: true,\n                        intensity: 1.1,\n                        radius: 5\n                    },\n                    FXAA: {\n                        enable: false\n                    }\n                }\n            });\n            this._advRenderer.setShadow({\n                kernelSize: 10,\n                blurSize: 3\n            });\n            var camera = app2.createCamera([\n                0,\n                0,\n                170\n            ], [\n                0,\n                0,\n                0\n            ], IS_TILE_STYLE ? \"ortho\" : \"perspective\");\n            if (IS_TILE_STYLE) {\n                camera.top = 50;\n                camera.bottom = -50;\n                camera.left = -50 * app2.renderer.getViewportAspect();\n                camera.right = 50 * app2.renderer.getViewportAspect();\n                camera.near = 0;\n                camera.far = 1000;\n            }\n            camera.update();\n            this._camera = camera;\n            this._earthNode = app2.createNode();\n            this._cloudsNode = app2.createNode();\n            this._elementsNodes = {};\n            this._elementsMaterials = {};\n            this._diffuseTex = app2.loadTextureSync(\"./asset/paper-detail.png\", {\n                anisotropic: 8\n            });\n            vectorElements.forEach(function(el) {\n                _this1._elementsNodes[el.type] = app2.createNode();\n                if (IS_TILE_STYLE) {\n                    _this1._elementsNodes[el.type].rotation.rotateX(-Math.PI / 2);\n                }\n                _this1._elementsMaterials[el.type] = app2.createMaterial({\n                    diffuseMap: _this1._diffuseTex,\n                    uvRepeat: [\n                        10,\n                        10\n                    ],\n                    color: config[el.type + \"Color\"],\n                    roughness: 1\n                });\n                _this1._elementsMaterials[el.type].name = \"mat_\" + el.type;\n            });\n            var light = app2.createDirectionalLight([\n                -1,\n                -1,\n                -1\n            ], \"#fff\");\n            light.shadowResolution = 2048;\n            light.shadowBias = IS_TILE_STYLE ? 0.01 : 0.0005;\n            this._control = new claygl__WEBPACK_IMPORTED_MODULE_16__.plugin.OrbitControl({\n                target: camera,\n                domElement: app2.container,\n                timeline: app2.timeline,\n                rotateSensitivity: 2,\n                orthographicAspect: app2.renderer.getViewportAspect()\n            });\n            if (IS_TILE_STYLE) {\n                this._control.setOption({\n                    beta: 45,\n                    alpha: 30,\n                    minAlpha: 10,\n                    maxAlpha: 80\n                });\n            }\n            this._control.on(\"update\", function() {\n                _this1._advRenderer.render();\n            });\n            if (!IS_TILE_STYLE) {\n                app2.methods.updateEarthSphere();\n            }\n            app2.methods.updateElements();\n            app2.methods.updateVisibility();\n            app2.methods.generateClouds();\n            this._advRenderer.render();\n            return app2.createAmbientCubemapLight(\"asset/Grand_Canyon_C.hdr\", 0.2, 0.8, 1).then(function(result) {\n                var skybox = new claygl__WEBPACK_IMPORTED_MODULE_16__.plugin.Skybox({\n                    environmentMap: result.specular.cubemap,\n                    scene: app2.scene\n                });\n                skybox.material.set(\"lod\", 2);\n                _this1._skybox = skybox;\n                _this1._advRenderer.render();\n            });\n        },\n        methods: {\n            updateEarthSphere: function updateEarthSphere(app3) {\n                var _this2 = this;\n                this._earthNode.removeAll();\n                var earthMat = app3.createMaterial({\n                    roughness: 1,\n                    color: config.earthColor,\n                    diffuseMap: this._diffuseTex,\n                    uvRepeat: [\n                        2,\n                        2\n                    ]\n                });\n                earthMat.name = \"mat_earth\";\n                faces.forEach(function(face) {\n                    var planeGeo = new claygl__WEBPACK_IMPORTED_MODULE_16__.geometry.Plane({\n                        widthSegments: 20,\n                        heightSegments: 20\n                    });\n                    app3.createMesh(planeGeo, earthMat, _this2._earthNode);\n                    (0,_lib_distortion__WEBPACK_IMPORTED_MODULE_10__[\"default\"])(planeGeo.attributes.position.value, {\n                        x: -1,\n                        y: -1,\n                        width: 2,\n                        height: 2\n                    }, config.radius, config.curveness, face);\n                    planeGeo.generateVertexNormals();\n                });\n                this._cloudsNode.eachChild(function(cloudMesh) {\n                    var dist = cloudMesh.height + config.radius / Math.sqrt(2);\n                    cloudMesh.position.normalize().scale(dist);\n                });\n                this._advRenderer.render();\n            },\n            updateEarthGround: function updateEarthGround(app4, rect) {\n                this._earthNode.removeAll();\n                var ref = (0,geometry_extrude__WEBPACK_IMPORTED_MODULE_2__.extrudePolygon)([\n                    [\n                        getRectCoords(earthRect)\n                    ]\n                ], {\n                    depth: config.earthDepth\n                }), position = ref.position, uv = ref.uv, normal = ref.normal, indices = ref.indices;\n                var geo = new claygl__WEBPACK_IMPORTED_MODULE_16__.Geometry();\n                geo.attributes.position.value = position;\n                geo.attributes.normal.value = normal;\n                geo.attributes.texcoord0.value = uv;\n                geo.indices = indices;\n                geo.updateBoundingBox();\n                var mesh = app4.createMesh(geo, {\n                    nmae: \"mat_earth\",\n                    roughness: 1,\n                    color: config.earthColor,\n                    diffuseMap: this._diffuseTex,\n                    uvRepeat: [\n                        2,\n                        2\n                    ]\n                }, this._earthNode);\n                mesh.rotation.rotateX(-Math.PI / 2);\n                mesh.position.y = -config.earthDepth + 0.1;\n                app4.methods.render();\n            },\n            updateElements: function updateElements(app5) {\n                var _this4 = this;\n                var createElementMesh = function createElementMesh(elConfig, features, boundingRect, idx) {\n                    if (!IS_TILE_STYLE && elConfig.type === \"roads\" || elConfig.type === \"water\") {\n                        subdivideLongEdges(features, 4);\n                    }\n                    var result = (0,geometry_extrude__WEBPACK_IMPORTED_MODULE_2__.extrudeGeoJSON)({\n                        features: features\n                    }, {\n                        lineWidth: 0.5,\n                        excludeBottom: true,\n                        simplify: IS_TILE_STYLE || elConfig.type === \"buildings\" ? 0.01 : 0,\n                        depth: elConfig.depth\n                    });\n                    var poly = result[elConfig.geometryType];\n                    var geo = new claygl__WEBPACK_IMPORTED_MODULE_16__.Geometry();\n                    if (!IS_TILE_STYLE && elConfig.type === \"water\") {\n                        var ref = (0,_lib_tessellate__WEBPACK_IMPORTED_MODULE_9__[\"default\"])(poly.position, poly.indices, 5), indices = ref.indices, position = ref.position;\n                        poly.indices = indices;\n                        poly.position = position;\n                    }\n                    geo.attributes.texcoord0.value = poly.uv;\n                    geo.indices = poly.indices;\n                    var mesh = app5.createMesh(geo, elementsMaterials[elConfig.type], elementsNodes[elConfig.type]);\n                    if (elConfig.type === \"buildings\") {\n                        var positionAnimateFrom = new Float32Array(poly.position);\n                        var positionAnimateTo = poly.position;\n                        for(var i2 = 0; i2 < positionAnimateFrom.length; i2 += 3){\n                            var z = positionAnimateFrom[i2 + 2];\n                            if (z > 0) {\n                                positionAnimateFrom[i2 + 2] = 1;\n                            }\n                        }\n                        if (!IS_TILE_STYLE) {\n                            positionAnimateTo = (0,_lib_distortion__WEBPACK_IMPORTED_MODULE_10__[\"default\"])(poly.position, boundingRect, config.radius, config.curveness, faces[idx]);\n                            positionAnimateFrom = (0,_lib_distortion__WEBPACK_IMPORTED_MODULE_10__[\"default\"])(positionAnimateFrom, boundingRect, config.radius, config.curveness, faces[idx]);\n                        }\n                        geo.attributes.position.value = positionAnimateTo;\n                        geo.generateVertexNormals();\n                        geo.updateBoundingBox();\n                        var transitionPosition = new Float32Array(positionAnimateFrom);\n                        geo.attributes.position.value = transitionPosition;\n                        mesh.invisible = true;\n                        var obj = {\n                            p: 0\n                        };\n                        buildingAnimators[faces[idx]] = app5.timeline.animate(obj).when(2000, {\n                            p: 1\n                        }).delay(1000).during(function(obj, p) {\n                            mesh.invisible = false;\n                            for(var i = 0; i < transitionPosition.length; i++){\n                                var a = positionAnimateFrom[i];\n                                var b = positionAnimateTo[i];\n                                transitionPosition[i] = (b - a) * p + a;\n                            }\n                            geo.dirty();\n                            advRenderer.render();\n                        }).start(\"elasticOut\");\n                    } else {\n                        if (IS_TILE_STYLE) {\n                            geo.attributes.position.value = poly.position;\n                        } else {\n                            geo.attributes.position.value = (0,_lib_distortion__WEBPACK_IMPORTED_MODULE_10__[\"default\"])(poly.position, boundingRect, config.radius, config.curveness, faces[idx]);\n                        }\n                        geo.generateVertexNormals();\n                        geo.updateBoundingBox();\n                    }\n                    return {\n                        boundingRect: poly.boundingRect\n                    };\n                };\n                this._id = Math.random();\n                var advRenderer = this._advRenderer;\n                var elementsNodes = this._elementsNodes;\n                var elementsMaterials = this._elementsMaterials;\n                for(var key3 in elementsNodes){\n                    elementsNodes[key3].removeAll();\n                }\n                for(var key2 in this._buildingAnimators){\n                    this._buildingAnimators[key2].stop();\n                }\n                var buildingAnimators = this._buildingAnimators = {};\n                var tiles = mainLayer.getTiles().tileGrids[0].tiles;\n                var subdomains = [\n                    \"a\",\n                    \"b\",\n                    \"c\"\n                ];\n                if (IS_TILE_STYLE) {\n                    var center = map.getCenter();\n                    tiles = tiles.filter(function(tile) {\n                        var extent = tile.extent2d.convertTo(function(c) {\n                            return map.pointToCoord(c);\n                        }).toJSON();\n                        return extent.xmax > center.x && extent.xmin < center.x && extent.ymax > center.y && extent.ymin < center.y;\n                    });\n                }\n                var loading = Math.min(tiles.length, 6);\n                tiles.forEach(function(tile, idx) {\n                    var _this3 = _this4;\n                    var fetchId = _this4._id;\n                    if (idx >= 6) {\n                        return;\n                    }\n                    var extent = tile.extent2d.convertTo(function(c) {\n                        return map.pointToCoord(c);\n                    }).toJSON();\n                    var scaleX = 1e4;\n                    var scaleY = scaleX * 1.4;\n                    var width1 = (extent.xmax - extent.xmin) * scaleX;\n                    var height1 = (extent.ymax - extent.ymin) * scaleY;\n                    var tileRect = {\n                        x: IS_TILE_STYLE ? -width1 / 2 : 0,\n                        y: IS_TILE_STYLE ? -height1 / 2 : 0,\n                        width: width1,\n                        height: height1\n                    };\n                    var allBoundingRect = {\n                        x: Infinity,\n                        y: Infinity,\n                        width: -Infinity,\n                        height: -Infinity\n                    };\n                    var url = mvtUrlTpl.replace(\"{z}\", tile.z).replace(\"{x}\", tile.x).replace(\"{y}\", tile.y).replace(\"{s}\", subdomains[idx % 3]);\n                    if (mvtCache.get(url)) {\n                        var _loop = function(key) {\n                            createElementMesh(vectorElements.find(function(config1) {\n                                return config1.type === key;\n                            }), features[key], tileRect, idx);\n                        };\n                        var features = mvtCache.get(url);\n                        for(var key in features)_loop(key);\n                        return;\n                    }\n                    return fetch(url, {\n                        mode: \"cors\"\n                    }).then(function(response) {\n                        return response.arrayBuffer();\n                    }).then(function(buffer) {\n                        var _loop = function(key) {\n                            var boundingRect = createElementMesh(vectorElements.find(function(config2) {\n                                return config2.type === key;\n                            }), features[key], tileRect, idx).boundingRect;\n                            unionRect(allBoundingRect, boundingRect, allBoundingRect);\n                        };\n                        if (fetchId !== _this3._id) {\n                            return;\n                        }\n                        var pbf = new (pbf__WEBPACK_IMPORTED_MODULE_3___default())(new Uint8Array(buffer));\n                        var vTile = new VectorTile(pbf);\n                        if (!vTile.layers.buildings) {\n                            return;\n                        }\n                        var features = {};\n                        [\n                            \"buildings\",\n                            \"roads\",\n                            \"water\"\n                        ].forEach(function(type) {\n                            if (!vTile.layers[type]) {\n                                return;\n                            }\n                            features[type] = [];\n                            for(var i = 0; i < vTile.layers[type].length; i++){\n                                var feature = vTile.layers[type].feature(i).toGeoJSON(tile.x, tile.y, tile.z);\n                                scaleFeature(feature, IS_TILE_STYLE ? [\n                                    -(extent.xmax + extent.xmin) / 2,\n                                    -(extent.ymax + extent.ymin) / 2, \n                                ] : [\n                                    -extent.xmin,\n                                    -extent.ymin\n                                ], [\n                                    scaleX,\n                                    scaleY\n                                ]);\n                                features[type].push(feature);\n                            }\n                            if (IS_TILE_STYLE) {\n                                cullBuildingPolygns(features[type]);\n                            }\n                        });\n                        if (features.water) {\n                            features.water = [\n                                unionComplexPolygons(features.water.filter(function(feature) {\n                                    var geoType = feature.geometry && feature.geometry.type;\n                                    return geoType === \"Polygon\" || geoType === \"MultiPolygon\";\n                                })), \n                            ];\n                        }\n                        if (features.roads) {\n                            features.roads = features.roads.filter(function(feature) {\n                                var geoType = feature.geometry && feature.geometry.type;\n                                return geoType === \"LineString\" || geoType === \"MultiLineString\";\n                            });\n                        }\n                        mvtCache.set(url, features);\n                        for(var key in features)_loop(key);\n                        loading--;\n                        if (IS_TILE_STYLE) {\n                            if (loading === 0) {\n                                app5.methods.updateEarthGround(allBoundingRect);\n                            }\n                        }\n                        app5.methods.render();\n                    });\n                });\n            },\n            generateClouds: function generateClouds(app6) {\n                var randomInSphere = function randomInSphere(r) {\n                    var alpha = Math.random() * Math.PI * 2;\n                    var beta = Math.random() * Math.PI;\n                    var r2 = Math.sin(beta) * r;\n                    var y = Math.cos(beta) * r;\n                    var x = Math.cos(alpha) * r2;\n                    var z = Math.sin(alpha) * r2;\n                    return [\n                        x,\n                        y,\n                        z\n                    ];\n                };\n                var cloudNumber = IS_TILE_STYLE ? 10 : 15;\n                var pointCount = 100;\n                this._cloudsNode.removeAll();\n                var cloudMaterial = app6.createMaterial({\n                    roughness: 1,\n                    color: config.cloudColor\n                });\n                cloudMaterial.name = \"mat_cloud\";\n                for(var i = 0; i < cloudNumber; i++){\n                    var positionArr = new Float32Array(5 * pointCount * 3);\n                    var off = 0;\n                    var indices = [];\n                    var dx = Math.random() - 0.5;\n                    var dy = Math.random() - 0.5;\n                    var len = Math.sqrt(dx * dx + dy * dy);\n                    dx /= len;\n                    dy /= len;\n                    var dist = 4 + Math.random() * 2;\n                    for(var i4 = 0; i4 < 5; i4++){\n                        var posOff = i4 - 2 + (Math.random() * 0.4 - 0.2);\n                        var rBase = 3 - Math.abs(posOff);\n                        var points = [];\n                        var vertexOffset = off / 3;\n                        for(var i5 = 0; i5 < pointCount; i5++){\n                            var r1 = Math.random() * rBase + rBase;\n                            var pt = randomInSphere(r1);\n                            points.push(pt);\n                            positionArr[off++] = pt[0] + posOff * dist * dx;\n                            if (IS_TILE_STYLE) {\n                                positionArr[off++] = pt[1];\n                                positionArr[off++] = pt[2] + posOff * dist * dy;\n                            } else {\n                                positionArr[off++] = pt[1] + posOff * dist * dy;\n                                positionArr[off++] = pt[2];\n                            }\n                        }\n                        var tmp = quickhull3d__WEBPACK_IMPORTED_MODULE_11___default()(points);\n                        for(var m = 0; m < tmp.length; m++){\n                            indices.push(tmp[m][0] + vertexOffset);\n                            indices.push(tmp[m][1] + vertexOffset);\n                            indices.push(tmp[m][2] + vertexOffset);\n                        }\n                    }\n                    var geo = new claygl__WEBPACK_IMPORTED_MODULE_16__.Geometry();\n                    geo.attributes.position.value = positionArr;\n                    geo.initIndicesFromArray(indices);\n                    geo.generateFaceNormals();\n                    var cloudMesh = app6.createMesh(geo, cloudMaterial, this._cloudsNode);\n                    cloudMesh.height = Math.random() * 10 + 20;\n                    if (IS_TILE_STYLE) {\n                        cloudMesh.position.setArray([\n                            (Math.random() - 0.5) * 60,\n                            Math.random() * 10 + 25,\n                            (Math.random() - 0.5) * 60, \n                        ]);\n                        if (IS_TILE_STYLE) {\n                            cloudMesh.scale.set(0.6, 0.6, 0.6);\n                        }\n                    } else {\n                        cloudMesh.position.setArray(randomInSphere(config.radius / Math.sqrt(2) + cloudMesh.height));\n                        cloudMesh.lookAt(claygl__WEBPACK_IMPORTED_MODULE_16__.Vector3.ZERO);\n                    }\n                }\n                app6.methods.render();\n            },\n            updateColor: function updateColor() {\n                this._earthNode.eachChild(function(mesh) {\n                    mesh.material.set(\"color\", config.earthColor);\n                });\n                this._cloudsNode.eachChild(function(mesh) {\n                    mesh.material.set(\"color\", config.cloudColor);\n                });\n                for(var key in this._elementsMaterials){\n                    this._elementsMaterials[key].set(\"color\", config[key + \"Color\"]);\n                }\n                this._advRenderer.render();\n            },\n            render: function render(app7) {\n                var _this5 = this;\n                this._control.orthographicAspect = app7.renderer.getViewportAspect();\n                this._advRenderer.render();\n                // TODO\n                setTimeout(function() {\n                    _this5._advRenderer.render();\n                }, 20);\n            },\n            updateAutoRotate: function updateAutoRotate() {\n                this._control.rotateSpeed = config.rotateSpeed * 50;\n                this._control.autoRotate = Math.abs(config.rotateSpeed) > 0.3;\n            },\n            updateSky: function updateSky(app8) {\n                config.sky ? this._skybox.attachScene(app8.scene) : this._skybox.detachScene();\n                this._advRenderer.render();\n            },\n            updateVisibility: function updateVisibility(app9) {\n                this._earthNode.invisible = !config.showEarth;\n                this._cloudsNode.invisible = !config.showCloud;\n                this._elementsNodes.buildings.invisible = !config.showBuildings;\n                this._elementsNodes.roads.invisible = !config.showRoads;\n                this._elementsNodes.water.invisible = !config.showWater;\n                app9.methods.render();\n            }\n        }\n    });\n    configApp(app);\n    return app;\n};\nvar actions = {\n    downloadOBJ: function() {\n        var downloading = false;\n        return function() {\n            if (downloading) {\n                return;\n            }\n            var ref = (0,_lib_toOBJ__WEBPACK_IMPORTED_MODULE_8__[\"default\"])(app.scene, {\n                mtllib: \"city\"\n            }), obj = ref.obj, mtl = ref.mtl;\n            var zip = new (jszip__WEBPACK_IMPORTED_MODULE_7___default())();\n            zip.file(\"city.obj\", obj);\n            zip.file(\"city.mtl\", mtl);\n            zip.generateAsync({\n                type: \"blob\",\n                compression: \"DEFLATE\"\n            }).then(function(content) {\n                downloading = false;\n                saveAs(content, \"city.zip\");\n            }).catch(function(e1) {\n                downloading = false;\n                console.error(e1.toString());\n            });\n            // Behind all processing in case some errror happens.\n            downloading = true;\n        };\n    }(),\n    randomCloud: function() {\n        app.methods.generateClouds();\n    },\n    reset: function() {\n        Object.assign(config, DEFAULT_CONFIG);\n        ui.updateDisplay();\n        window.location = makeUrl();\n    }\n};\nvar LittleCity = function() {\n    _s();\n    var viewport = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(function() {\n        console.log(\"reredner....\");\n        if (!viewport.current) return;\n        initMap();\n        initClay(viewport.current);\n    }, [\n        viewport\n    ]);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                id: \"viewport\",\n                ref: viewport,\n                className: (_index_module_css__WEBPACK_IMPORTED_MODULE_17___default().viewport)\n            }, void 0, false, {\n                fileName: \"/Users/Drogo/person/next-demo/packages/web/components/LittleCity/index.tsx\",\n                lineNumber: 1083,\n                columnNumber: 7\n            }, _this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                id: \"map\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h3\", {\n                        children: \"Pan the map to select a new area\"\n                    }, void 0, false, {\n                        fileName: \"/Users/Drogo/person/next-demo/packages/web/components/LittleCity/index.tsx\",\n                        lineNumber: 1085,\n                        columnNumber: 9\n                    }, _this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        id: \"location\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                                children: \"LNG\"\n                            }, void 0, false, {\n                                fileName: \"/Users/Drogo/person/next-demo/packages/web/components/LittleCity/index.tsx\",\n                                lineNumber: 1087,\n                                columnNumber: 11\n                            }, _this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                id: \"lng\",\n                                type: \"text\",\n                                value: \"-74.0130345\"\n                            }, void 0, false, {\n                                fileName: \"/Users/Drogo/person/next-demo/packages/web/components/LittleCity/index.tsx\",\n                                lineNumber: 1088,\n                                columnNumber: 11\n                            }, _this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                                children: \"LAT\"\n                            }, void 0, false, {\n                                fileName: \"/Users/Drogo/person/next-demo/packages/web/components/LittleCity/index.tsx\",\n                                lineNumber: 1089,\n                                columnNumber: 11\n                            }, _this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                id: \"lat\",\n                                type: \"text\",\n                                value: \"40.7063516\"\n                            }, void 0, false, {\n                                fileName: \"/Users/Drogo/person/next-demo/packages/web/components/LittleCity/index.tsx\",\n                                lineNumber: 1090,\n                                columnNumber: 11\n                            }, _this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                id: \"reset\",\n                                children: \"RESET\"\n                            }, void 0, false, {\n                                fileName: \"/Users/Drogo/person/next-demo/packages/web/components/LittleCity/index.tsx\",\n                                lineNumber: 1091,\n                                columnNumber: 11\n                            }, _this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                id: \"locate\",\n                                children: \"GO\"\n                            }, void 0, false, {\n                                fileName: \"/Users/Drogo/person/next-demo/packages/web/components/LittleCity/index.tsx\",\n                                lineNumber: 1092,\n                                columnNumber: 11\n                            }, _this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/Drogo/person/next-demo/packages/web/components/LittleCity/index.tsx\",\n                        lineNumber: 1086,\n                        columnNumber: 9\n                    }, _this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        id: \"map-main\"\n                    }, void 0, false, {\n                        fileName: \"/Users/Drogo/person/next-demo/packages/web/components/LittleCity/index.tsx\",\n                        lineNumber: 1094,\n                        columnNumber: 9\n                    }, _this)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/Drogo/person/next-demo/packages/web/components/LittleCity/index.tsx\",\n                lineNumber: 1084,\n                columnNumber: 7\n            }, _this)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/Drogo/person/next-demo/packages/web/components/LittleCity/index.tsx\",\n        lineNumber: 1082,\n        columnNumber: 5\n    }, _this);\n};\n_s(LittleCity, \"/djMZZHkkQhhlZvVmPaWkk4zz2I=\");\n_c = LittleCity;\n/* harmony default export */ __webpack_exports__[\"default\"] = (LittleCity);\nvar _c;\n$RefreshReg$(_c, \"LittleCity\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./components/LittleCity/index.tsx\n");

/***/ })

});